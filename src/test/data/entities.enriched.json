[
  {
    "id": "Function:searchCodeEntities",
    "type": "function",
    "file": "packages/parser-agent/src/rag-inline-tool.ts",
    "loc": {
      "start": 1758,
      "end": 1766
    },
    "rawName": "searchCodeEntities",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:SimpleLogger",
      "Class:DB",
      "Function:dbConfig"
    ],
    "CALLS": [
      "Class:DB.isDBConnected",
      "Class:DB.initDB",
      "Class:DB.searchFlowNode"
    ],
    "EMITS": [],
    "ANNOTATION": "简便的函数接口，用于快速调用搜索功能",
    "summary": "函数: searchCodeEntities",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getRelatedCodeEntities",
    "type": "function",
    "file": "packages/parser-agent/src/rag-inline-tool.ts",
    "loc": {
      "start": 1769,
      "end": 1777
    },
    "rawName": "getRelatedCodeEntities",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:SimpleLogger",
      "Class:DB",
      "Function:dbConfig"
    ],
    "CALLS": [
      "Class:DB.isDBConnected",
      "Class:DB.initDB",
      "Class:DB.searchFlowNode"
    ],
    "EMITS": [],
    "ANNOTATION": "简便的函数接口，用于快速调用关系查询功能",
    "summary": "函数: getRelatedCodeEntities",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Class:RagInlineTool",
    "type": "class",
    "file": "packages/parser-agent/src/rag-inline-tool.ts",
    "loc": {
      "start": 76,
      "end": 1755
    },
    "rawName": "RagInlineTool",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:SimpleLogger",
      "Class:DB",
      "Function:dbConfig"
    ],
    "CALLS": [
      "Class:DB.isDBConnected",
      "Class:DB.initDB",
      "Class:DB.searchFlowNode"
    ],
    "EMITS": [],
    "ANNOTATION": "RAG（检索增强生成）内联工具类\n用于代码实体的智能检索和关系分析",
    "summary": "函数: RagInlineTool",
    "tags": [
      "class",
      "有API调用"
    ]
  },
  {
    "id": "Function:readFile",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 33,
      "end": 37
    },
    "rawName": "readFile",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: readFile",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:readEntity",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 42,
      "end": 46
    },
    "rawName": "readEntity",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "从图数据库中读取实体信息的函数，支持文件实体和代码实体两种类型，可自动识别实体类型或根据指定类型进行查询，返回实体详细信息。",
    "tags": [
      "图数据库",
      "实体读取",
      "代码知识图谱",
      "Nebula查询",
      "数据检索"
    ]
  },
  {
    "id": "Function:listFiles",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 51,
      "end": 55
    },
    "rawName": "listFiles",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: listFiles",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:listEntities",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 60,
      "end": 64
    },
    "rawName": "listEntities",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: listEntities",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:listEntitiesByType",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 69,
      "end": 77
    },
    "rawName": "listEntitiesByType",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: listEntitiesByType",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getEntityRelationships",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 82,
      "end": 104
    },
    "rawName": "getEntityRelationships",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: getEntityRelationships",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:update",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "update",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "更新实体（统一入口，引用builder功能）\n@param entity 文件实体或代码实体\n@param client 可选的Nebula客户端",
    "summary": "函数: update",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:deleteFile",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 384,
      "end": 388
    },
    "rawName": "deleteFile",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: deleteFile",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:deleteEntity",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 393,
      "end": 397
    },
    "rawName": "deleteEntity",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: deleteEntity",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:deleteRelationship",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 402,
      "end": 418
    },
    "rawName": "deleteRelationship",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: deleteRelationship",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:clearAllData",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 423,
      "end": 432
    },
    "rawName": "clearAllData",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: clearAllData",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getStats",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 441,
      "end": 459
    },
    "rawName": "getStats",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "summary": "函数: getStats",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:escapeString",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 24,
      "end": 37
    },
    "rawName": "escapeString",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "转义字符串中的特殊字符, 并对超长字符串进行哈希",
    "summary": "转义字符串中的特殊字符（如反斜杠、引号、换行符等），并对超过250字符的长字符串进行MD5哈希处理，用于数据库安全存储。",
    "tags": [
      "字符串处理",
      "转义特殊字符",
      "哈希处理",
      "数据库安全",
      "字符串截断"
    ]
  },
  {
    "id": "Function:logQuery",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 39,
      "end": 41
    },
    "rawName": "logQuery",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "summary": "记录并打印Nebula Graph数据库查询语句到控制台错误输出，用于调试和跟踪数据库操作，显示格式为带有分隔符的查询语句。",
    "tags": [
      "数据库日志",
      "调试工具",
      "Nebula Graph",
      "查询记录",
      "控制台输出"
    ]
  },
  {
    "id": "Function:executeNgqlWithRetry",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 50,
      "end": 105
    },
    "rawName": "executeNgqlWithRetry",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "Executes a NGQL query with a retry mechanism.\n@param client The NebulaClient instance.\n@param query The NGQL query to execute.\n@param maxRetries The maximum number of retries.\n@param initialDelay The initial delay in milliseconds.",
    "summary": "函数: executeNgqlWithRetry",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:buildGraph",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 114,
      "end": 173
    },
    "rawName": "buildGraph",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "summary": "函数: buildGraph",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:addOrUpdateFile",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 180,
      "end": 199
    },
    "rawName": "addOrUpdateFile",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "插入或更新文件节点\n@param file 文件实体\n@param client Nebula客户端",
    "summary": "函数: addOrUpdateFile",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:addOrUpdateEntity",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 206,
      "end": 256
    },
    "rawName": "addOrUpdateEntity",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "插入或更新实体节点\n@param entity 实体\n@param client Nebula客户端",
    "summary": "函数: addOrUpdateEntity",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:createRelationships",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 298,
      "end": 377
    },
    "rawName": "createRelationships",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "批量创建关系\n@param entities 实体列表\n@param client Nebula客户端",
    "summary": "函数: createRelationships",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:clearNodeExistenceCache",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 652,
      "end": 655
    },
    "rawName": "clearNodeExistenceCache",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "清除节点存在性缓存（可选，用于重新开始时清理）",
    "summary": "函数: clearNodeExistenceCache",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:create",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "create",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "================================\nCREATE/UPDATE 操作\n================================\n创建实体（统一入口，引用builder功能）\n@param entity 文件实体或代码实体\n@param client 可选的Nebula客户端",
    "summary": "函数: create",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:read",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "read",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "读取实体（统一入口）\n@param id 实体ID\n@param entityType 实体类型，如果不提供则尝试自动识别\n@param client 可选的Nebula客户端",
    "summary": "函数: read",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:remove",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "remove",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "删除实体（统一入口）\n@param id 实体ID\n@param entityType 实体类型，如果不提供则尝试自动识别\n@param client 可选的Nebula客户端",
    "summary": "从图数据库中删除指定ID的实体，支持自动识别实体类型或通过参数指定类型，删除过程包括清理相关边和顶点，返回操作成功状态。",
    "tags": [
      "图数据库",
      "实体删除",
      "Nebula Graph",
      "CRUD操作",
      "知识图谱"
    ]
  },
  {
    "id": "Function:batchCreate",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "batchCreate",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "================================\n批量操作函数\n================================\n批量创建实体",
    "summary": "函数: batchCreate",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:batchUpdate",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "batchUpdate",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "批量更新实体",
    "summary": "函数: batchUpdate",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:batchRemove",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "batchRemove",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "批量删除实体",
    "summary": "函数: batchRemove",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getEntitiesInFile",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "getEntitiesInFile",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "================================\n查询辅助函数\n================================\n查询文件包含的所有实体",
    "summary": "函数: getEntitiesInFile",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:queryEntities",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "queryEntities",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "根据条件查询实体",
    "summary": "函数: queryEntities",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getRelatedEntities",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "getRelatedEntities",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "根据实体ID和边类型查询相关实体\n@param entityId 源实体ID\n@param edgeType 边类型：'IMPORTS', 'CALLS', 'CONTAINS' 或 'ALL'\n@param direction 查询方向：'OUT'(出边), 'IN'(入边), 'BOTH'(双向)\n@param client 可选的Nebula客户端\n@returns 相关实体列表",
    "summary": "函数: getRelatedEntities",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getEntityDependencyChain",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "getEntityDependencyChain",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "查询实体的多跳关系（依赖链分析）\n@param entityId 源实体ID\n@param maxHops 最大跳数，默认为2\n@param edgeTypes 查询的边类型\n@param client 可选的Nebula客户端\n@returns 多跳关系结果",
    "summary": "函数: getEntityDependencyChain",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:findRelationshipPath",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "findRelationshipPath",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "查询两个实体之间的关系路径\n@param sourceId 源实体ID\n@param targetId 目标实体ID\n@param maxHops 最大跳数，默认为3\n@param client 可选的Nebula客户端\n@returns 关系路径",
    "summary": "函数: findRelationshipPath",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getEntityImports",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "getEntityImports",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "获取实体的导入关系",
    "summary": "函数: getEntityImports",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getEntityCalls",
    "type": "function",
    "file": "packages/graph-builder-agent/src/crud.ts",
    "loc": {
      "start": 1025,
      "end": 1054
    },
    "rawName": "getEntityCalls",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:EntityType",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Function:getCurrentSpace",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:buildGraph",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:executeNgqlWithRetry"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:addOrUpdateFile",
      "Function:addOrUpdateEntity",
      "Function:createRelationships",
      "Function:escapeString",
      "Function:logQuery",
      "Function:buildGraph"
    ],
    "EMITS": [],
    "ANNOTATION": "获取实体的调用关系",
    "summary": "函数: getEntityCalls",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Variable:SPACE",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 23,
      "end": 23
    },
    "rawName": "SPACE",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "🚫 移除静态的",
    "summary": "函数: SPACE",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Variable:FILE_TAG",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 9,
      "end": 9
    },
    "rawName": "FILE_TAG",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "文件标签",
    "summary": "Nebula Graph数据库Schema配置中的常量，表示代码文件的标签名称，值为\"CodeFile\"，用于在图数据库中标识代码文件节点",
    "tags": [
      "Nebula Graph",
      "图数据库标签",
      "代码文件",
      "Schema配置",
      "节点类型"
    ]
  },
  {
    "id": "Variable:ENTITY_TAG",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 12,
      "end": 12
    },
    "rawName": "ENTITY_TAG",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "实体标签",
    "summary": "Nebula Graph数据库中用于表示代码实体的标签名称，在构建代码知识图谱时用于标记代码中的函数、类、变量等实体节点",
    "tags": [
      "代码知识图谱",
      "Nebula Graph",
      "实体标签",
      "图数据库",
      "代码分析"
    ]
  },
  {
    "id": "Variable:FLOW_TAG",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 15,
      "end": 15
    },
    "rawName": "FLOW_TAG",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "flow类型",
    "summary": "Nebula Graph数据库中表示Flow类型的标签名称常量，用于在图数据库中标识流程节点，是Schema配置的一部分，可用于创建图空间和Schema",
    "tags": [
      "图数据库",
      "Nebula Graph",
      "Flow标签",
      "Schema配置",
      "数据模型"
    ]
  },
  {
    "id": "Variable:REL_CONTAINS",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 18,
      "end": 18
    },
    "rawName": "REL_CONTAINS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "包含关系(文件包含实体)",
    "summary": "表示文件包含实体的关系类型常量，用于在Nebula Graph数据库中定义边类型，构建代码文件与其包含的代码实体之间的包含关系。",
    "tags": [
      "图数据库关系",
      "代码结构映射",
      "包含关系",
      "Nebula Graph",
      "代码分析"
    ]
  },
  {
    "id": "Variable:REL_IMPORTS",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 21,
      "end": 21
    },
    "rawName": "REL_IMPORTS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "导入关系",
    "summary": "定义Nebula Graph数据库中表示代码实体之间导入关系的边类型名称，用于构建代码依赖图中的导入依赖关系",
    "tags": [
      "Nebula Graph",
      "导入关系",
      "代码依赖",
      "图数据库",
      "边类型"
    ]
  },
  {
    "id": "Variable:REL_CALLS",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 24,
      "end": 24
    },
    "rawName": "REL_CALLS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "调用关系",
    "summary": "表示代码实体之间的调用关系的边类型名称，用于在Nebula Graph数据库中定义代码调用关系的边，是代码图谱中的核心关系类型之一",
    "tags": [
      "图数据库",
      "代码关系",
      "调用关系",
      "Nebula Graph",
      "边类型"
    ]
  },
  {
    "id": "Variable:REL_EMITS",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 27,
      "end": 27
    },
    "rawName": "REL_EMITS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "发出关系",
    "summary": "定义在Nebula Graph数据库Schema中表示发出关系的边类型名称，用于构建代码实体之间的事件发射关系，包含事件名称、类型和参数等属性。",
    "tags": [
      "图数据库",
      "关系边类型",
      "事件发射",
      "代码分析",
      "Nebula Graph"
    ]
  },
  {
    "id": "Variable:CREATE_SCHEMA_STATEMENTS",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 74,
      "end": 74
    },
    "rawName": "CREATE_SCHEMA_STATEMENTS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "summary": "函数: CREATE_SCHEMA_STATEMENTS",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Function:run",
    "type": "function",
    "file": "packages/cursor-mcp-plugin/src/index.ts",
    "loc": {
      "start": 293,
      "end": 301
    },
    "rawName": "run",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Variable:serverConfig",
      "Variable:TOOL_PARAMS",
      "Variable:TOOL_NAMES",
      "Function:getFullToolDescription",
      "Component:StartAnalysisHandler",
      "Component:CoreComponentHandler",
      "Component:ModifyEntityHandler",
      "Component:GeneratePromptHandler",
      "Component:QuickAnalysisHandler",
      "Class:EntityFileStatusHandler",
      "Variable:multiWorkspaceManager"
    ],
    "CALLS": [
      "Variable:multiWorkspaceManager.hasAnyWorkspace",
      "Variable:multiWorkspaceManager.getAvailableWorkspaces",
      "Function:getFullToolDescription",
      "Variable:multiWorkspaceManager.disposeAll"
    ],
    "EMITS": [],
    "ANNOTATION": "导出 run 函数供 main.ts 调用",
    "summary": "启动代码分析服务器的入口函数，创建CodeAnalysisServer实例并启动服务，处理多工作区环境下的代码分析工具注册和错误处理，支持智能代码分析功能。",
    "tags": [
      "代码分析服务",
      "MCP服务器",
      "多工作区管理",
      "工具注册",
      "错误处理"
    ]
  },
  {
    "id": "Function:addOrUpdateFlow",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 263,
      "end": 288
    },
    "rawName": "addOrUpdateFlow",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "插入或更新流程节点\n@param flow 流程实体\n@param client Nebula客户端",
    "summary": "函数: addOrUpdateFlow",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:prepareDataFromFile",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 704,
      "end": 771
    },
    "rawName": "prepareDataFromFile",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "ANNOTATION": "数据准备器\n从 entities.enriched.json 文件加载和预处理数据\n从 entities.enriched.json 文件准备图构建所需的数据\n@param entitiesFilePath entities.enriched.json 文件的完整路径\n@returns 准备好的文件和实体数据",
    "summary": "函数: prepareDataFromFile",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:buildGraphFromFile",
    "type": "function",
    "file": "packages/graph-builder-agent/src/builder.ts",
    "loc": {
      "start": 1008,
      "end": 1015
    },
    "rawName": "buildGraphFromFile",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:FileEntity",
      "Class:EnrichedEntity",
      "Class:PreparedData",
      "Class:FlowEntity",
      "Class:NebulaClient",
      "Function:getDefaultClient",
      "Variable:FILE_TAG",
      "Variable:ENTITY_TAG",
      "Variable:REL_CONTAINS",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_EMITS",
      "Variable:FLOW_TAG",
      "Function:createSchemaStatements",
      "Function:getCurrentSpace"
    ],
    "CALLS": [
      "Function:getDefaultClient",
      "Function:createSchemaStatements"
    ],
    "EMITS": [],
    "summary": "函数: buildGraphFromFile",
    "tags": [
      "function",
      "有API调用"
    ]
  },
  {
    "id": "Function:getSpace",
    "type": "function",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 12,
      "end": 14
    },
    "rawName": "getSpace",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "export const SPACE =",
    "summary": "函数: getSpace",
    "tags": [
      "function"
    ]
  },
  {
    "id": "Function:setSpace",
    "type": "function",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 17,
      "end": 20
    },
    "rawName": "setSpace",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "summary": "函数: setSpace",
    "tags": [
      "function"
    ]
  },
  {
    "id": "Function:createSchemaStatements",
    "type": "function",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 47,
      "end": 69
    },
    "rawName": "createSchemaStatements",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "创建图空间和Schema的NGQL语句\n@param spaceName 可选的图空间名称，默认使用当前设置的空间",
    "summary": "生成创建Nebula Graph图空间和Schema的NGQL语句，包括创建图空间、标签、边类型和索引，支持指定自定义图空间名称或使用当前设置的空间",
    "tags": [
      "Nebula Graph",
      "Schema生成",
      "图数据库",
      "NGQL语句",
      "代码图谱"
    ]
  },
  {
    "id": "Variable:DEFAULT_SPACE",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 6,
      "end": 6
    },
    "rawName": "DEFAULT_SPACE",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "Nebula Graph 数据库Schema配置\n默认图空间名称",
    "summary": "Nebula Graph数据库中默认图空间的名称常量，值为\"code_graph\"，用于在代码图谱构建过程中作为默认的图空间标识符。",
    "tags": [
      "Nebula Graph",
      "图空间",
      "默认配置",
      "代码图谱",
      "数据库Schema"
    ]
  },
  {
    "id": "Class:NebulaClient",
    "type": "class",
    "file": "packages/nebula-client/src/client.ts",
    "loc": {
      "start": 20,
      "end": 254
    },
    "rawName": "NebulaClient",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClientOptions",
      "Class:ConnectRequest",
      "Class:ExecRequest",
      "Class:NebulaResponse",
      "Class:QueryResult",
      "Class:ClientConfig"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "Nebula Graph HTTP Gateway 客户端类",
    "summary": "Nebula Graph HTTP Gateway客户端类，提供连接管理、NGQL查询执行和会话维护功能，支持自动重连和环境变量配置，用于与Nebula Graph图数据库进行交互。",
    "tags": [
      "Nebula Graph",
      "图数据库",
      "HTTP客户端",
      "NGQL查询",
      "会话管理"
    ]
  },
  {
    "id": "Function:getCurrentSpace",
    "type": "function",
    "file": "packages/graph-builder-agent/src/schema.ts",
    "loc": {
      "start": 32,
      "end": 41
    },
    "rawName": "getCurrentSpace",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "🎯 获取当前图空间名称（从全局客户端管理器）",
    "summary": "从全局客户端管理器获取当前Nebula Graph图空间名称，通过动态导入client-manager模块并调用getStatus方法实现，用于确保操作在正确的图空间中执行",
    "tags": [
      "图数据库",
      "Nebula Graph",
      "图空间管理",
      "全局状态",
      "数据库连接"
    ]
  },
  {
    "id": "Function:initializeGlobalClient",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 494,
      "end": 498
    },
    "rawName": "initializeGlobalClient",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "初始化全局客户端管理器",
    "summary": "初始化全局Nebula Graph客户端管理器，配置连接参数并建立与图数据库的连接，支持自动重连和健康检查，为应用提供统一的图数据库访问入口。",
    "tags": [
      "Nebula Graph",
      "客户端初始化",
      "图数据库连接",
      "单例模式",
      "数据访问"
    ]
  },
  {
    "id": "Function:getGlobalClient",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 503,
      "end": 505
    },
    "rawName": "getGlobalClient",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "获取全局客户端实例",
    "summary": "获取全局Nebula Graph数据库客户端实例，如果连接断开且启用自动重连，会尝试重新连接，是访问图数据库的统一入口点",
    "tags": [
      "Nebula Graph",
      "客户端连接",
      "单例模式",
      "数据库访问",
      "自动重连"
    ]
  },
  {
    "id": "Function:useSpace",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 510,
      "end": 512
    },
    "rawName": "useSpace",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "切换图空间",
    "summary": "在Nebula Graph数据库中切换图空间，通过获取客户端连接并执行USE命令来实现空间切换，成功后更新当前空间状态并记录日志，失败则返回错误信息。",
    "tags": [
      "图数据库",
      "空间切换",
      "Nebula Graph",
      "数据库连接",
      "客户端管理"
    ]
  },
  {
    "id": "Function:executeQuery",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 517,
      "end": 519
    },
    "rawName": "executeQuery",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "执行查询",
    "summary": "通过NebulaClient执行图数据库查询，支持自动重连和错误处理，是GlobalClientManager类中负责与Nebula Graph数据库交互执行NGQL查询的核心方法。",
    "tags": [
      "图数据库查询",
      "Nebula Graph",
      "NGQL执行",
      "数据访问",
      "客户端管理"
    ]
  },
  {
    "id": "Function:getClientStatus",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 524,
      "end": 526
    },
    "rawName": "getClientStatus",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "获取连接状态",
    "summary": "获取Nebula Graph数据库客户端的连接状态，返回包含连接状态、当前图空间、会话ID、最后连接时间、重连尝试次数和健康状态的信息",
    "tags": [
      "Nebula Graph",
      "连接状态",
      "客户端管理",
      "数据库监控",
      "图数据库"
    ]
  },
  {
    "id": "Function:reconnectClient",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 531,
      "end": 533
    },
    "rawName": "reconnectClient",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "手动重连",
    "summary": "函数: reconnectClient",
    "tags": [
      "function"
    ]
  },
  {
    "id": "Function:destroyGlobalClient",
    "type": "function",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 538,
      "end": 540
    },
    "rawName": "destroyGlobalClient",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "销毁全局客户端连接",
    "summary": "销毁全局Nebula Graph客户端连接，停止健康检查，断开连接并重置状态，是客户端管理器资源清理的函数，通过调用GlobalClientManager实例的destroy方法实现。",
    "tags": [
      "Nebula Graph",
      "连接管理",
      "资源清理",
      "客户端销毁",
      "数据库连接"
    ]
  },
  {
    "id": "Class:GlobalClientManager",
    "type": "class",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 38,
      "end": 486
    },
    "rawName": "GlobalClientManager",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "summary": "全局Nebula图数据库客户端管理器，提供单例模式的连接管理，负责图数据库的连接、重连、健康检查、图空间管理等功能，可被多个应用共享使用。",
    "tags": [
      "图数据库",
      "连接管理",
      "单例模式",
      "Nebula客户端",
      "图空间管理"
    ]
  },
  {
    "id": "Variable:clientManager",
    "type": "variable",
    "file": "packages/graph-builder-agent/src/client-manager.ts",
    "loc": {
      "start": 489,
      "end": 489
    },
    "rawName": "clientManager",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "保留便捷函数，但标记为可选",
    "summary": "GlobalClientManager的单例实例，用于管理Nebula Graph数据库连接，提供便捷访问方式，支持多应用共享使用，但被标记为可选使用",
    "tags": [
      "Nebula客户端",
      "单例模式",
      "数据库连接",
      "图数据库",
      "全局管理器"
    ]
  },
  {
    "id": "Class:DB",
    "type": "class",
    "file": "packages/parser-agent/src/db/index.ts",
    "loc": {
      "start": 17,
      "end": 129
    },
    "rawName": "DB",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "summary": "数据库操作工具类，提供MySQL连接初始化、查询执行、连接关闭等功能，支持流程节点查询，使用Sequelize作为ORM框架实现数据库交互。",
    "tags": [
      "数据库工具",
      "MySQL连接",
      "Sequelize ORM",
      "流程节点查询",
      "数据访问层"
    ]
  },
  {
    "id": "Variable:server",
    "type": "variable",
    "file": "backup/index.ts",
    "loc": {
      "start": 43,
      "end": 64
    },
    "rawName": "server",
    "isWorkspace": false,
    "isDDD": false,
    "IMPORTS": [
      "Class:RagInlineTool"
    ],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "开始实体分析对话 - Step 1: 分析需求，返回5个核心组件",
    "summary": "函数: server",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Class:MultiWorkspaceManager",
    "type": "class",
    "file": "packages/cursor-mcp-plugin/src/utils/multi-workspace-utils.ts",
    "loc": {
      "start": 12,
      "end": 273
    },
    "rawName": "MultiWorkspaceManager",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:RagInlineTool",
      "Component:EntityIdGenerator",
      "Variable:serverConfig",
      "Function:enrichedToEntity"
    ],
    "CALLS": [
      "Function:enrichedToEntity"
    ],
    "EMITS": [],
    "ANNOTATION": "多workspace管理工具类\n负责处理多workspace环境下的实体加载、搜索和管理",
    "summary": "函数: MultiWorkspaceManager",
    "tags": [
      "class",
      "有API调用"
    ]
  },
  {
    "id": "Variable:multiWorkspaceManager",
    "type": "variable",
    "file": "packages/cursor-mcp-plugin/src/utils/multi-workspace-utils.ts",
    "loc": {
      "start": 276,
      "end": 276
    },
    "rawName": "multiWorkspaceManager",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:RagInlineTool",
      "Component:EntityIdGenerator",
      "Variable:serverConfig",
      "Function:enrichedToEntity"
    ],
    "CALLS": [
      "Function:enrichedToEntity"
    ],
    "EMITS": [],
    "ANNOTATION": "单例实例",
    "summary": "函数: multiWorkspaceManager",
    "tags": [
      "variable",
      "有API调用"
    ]
  },
  {
    "id": "Class:CodeRAG",
    "type": "class",
    "file": "packages/graph-builder-agent/src/rag.ts",
    "loc": {
      "start": 12,
      "end": 298
    },
    "rawName": "CodeRAG",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [
      "Class:NebulaClient",
      "Variable:ENTITY_TAG",
      "Variable:FILE_TAG",
      "Variable:REL_IMPORTS",
      "Variable:REL_CALLS",
      "Variable:REL_CONTAINS"
    ],
    "CALLS": [],
    "EMITS": [],
    "summary": "CodeRAG类实现了基于代码知识图谱的问答系统，通过关键词提取、图谱检索、上下文扩展和AI生成，为用户提供代码相关问题的智能回答",
    "tags": [
      "代码知识图谱",
      "RAG检索",
      "问答系统",
      "Nebula Graph",
      "AI生成"
    ]
  },
  {
    "id": "Variable:TOOL_PARAMS",
    "type": "variable",
    "file": "packages/cursor-mcp-plugin/src/tools/params.ts",
    "loc": {
      "start": 3,
      "end": 76
    },
    "rawName": "TOOL_PARAMS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "summary": "函数: TOOL_PARAMS",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Variable:TOOL_NAMES",
    "type": "variable",
    "file": "packages/cursor-mcp-plugin/src/tools/params.ts",
    "loc": {
      "start": 78,
      "end": 85
    },
    "rawName": "TOOL_NAMES",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "summary": "函数: TOOL_NAMES",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Variable:TOOL_DESCRIPTIONS",
    "type": "variable",
    "file": "packages/cursor-mcp-plugin/src/tools/params.ts",
    "loc": {
      "start": 87,
      "end": 100
    },
    "rawName": "TOOL_DESCRIPTIONS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "summary": "函数: TOOL_DESCRIPTIONS",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Variable:TOOL_USAGE_HINTS",
    "type": "variable",
    "file": "packages/cursor-mcp-plugin/src/tools/params.ts",
    "loc": {
      "start": 103,
      "end": 116
    },
    "rawName": "TOOL_USAGE_HINTS",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "工具使用时机说明 - 用于在工具注册时提供额外的使用指导",
    "summary": "函数: TOOL_USAGE_HINTS",
    "tags": [
      "variable"
    ]
  },
  {
    "id": "Function:getFullToolDescription",
    "type": "function",
    "file": "packages/cursor-mcp-plugin/src/tools/params.ts",
    "loc": {
      "start": 119,
      "end": 123
    },
    "rawName": "getFullToolDescription",
    "isWorkspace": true,
    "isDDD": false,
    "IMPORTS": [],
    "CALLS": [],
    "EMITS": [],
    "ANNOTATION": "完整的工具描述 - 包含基础描述和使用时机",
    "summary": "函数: getFullToolDescription",
    "tags": [
      "function"
    ]
  }
]